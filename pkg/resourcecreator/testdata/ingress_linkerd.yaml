config:
  description: ingress resource is created on-premises

resourceoptions:
  Linkerd: true
  GatewayMappings:
    - DomainSuffix: .bar
      IngressClass: very-nginx
    - DomainSuffix: .baz
      IngressClass: something-else

input:
  kind: Application
  apiVersion: v1alpha1
  metadata:
    name: myapplication
    namespace: mynamespace
    uid: "123456"
    labels:
      team: myteam
  spec:
    ingresses:
      - https://foo.bar/baz
      - https://bar.baz/foo

tests:
  - apiVersion: networking.k8s.io/v1beta1
    kind: Ingress
    name: myapplication-01
    operation: CreateOrUpdate
    match:
      - type: exact
        name: "ingress for foo.bar created with Linkerd config"
        exclude:
            - .status
            - .metadata.creationTimestamp
            - .metadata.ownerReferences
            - .metadata.labels
            - .metadata.name
            - .metadata.namespace
        resource:
          metadata:
            annotations:
              nais.io/deploymentCorrelationID: ""
              prometheus.io/path: ""
              prometheus.io/scrape: "true"
              kubernetes.io/ingress.class: "very-nginx"
          spec:
            rules:
              - host: foo.bar
                http:
                  paths:
                    - backend:
                        serviceName: myapplication
                        servicePort: 80
                      path: /baz

  - apiVersion: networking.k8s.io/v1beta1
    kind: Ingress
    name: myapplication-02
    operation: CreateOrUpdate
    match:
        - type: exact
          name: "ingress for bar.baz created with Linkerd config"
          exclude:
              - .status
              - .metadata.creationTimestamp
              - .metadata.ownerReferences
              - .metadata.labels
              - .metadata.name
              - .metadata.namespace
          resource:
              metadata:
                  annotations:
                      nais.io/deploymentCorrelationID: ""
                      prometheus.io/path: ""
                      prometheus.io/scrape: "true"
                      kubernetes.io/ingress.class: "something-else"
              spec:
                  rules:
                      - host: bar.baz
                        http:
                            paths:
                                - backend:
                                      serviceName: myapplication
                                      servicePort: 80
                                  path: /foo
