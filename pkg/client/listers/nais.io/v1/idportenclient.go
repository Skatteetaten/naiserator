// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/nais/naiserator/pkg/apis/nais.io/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// IDPortenClientLister helps list IDPortenClients.
type IDPortenClientLister interface {
	// List lists all IDPortenClients in the indexer.
	List(selector labels.Selector) (ret []*v1.IDPortenClient, err error)
	// IDPortenClients returns an object that can list and get IDPortenClients.
	IDPortenClients(namespace string) IDPortenClientNamespaceLister
	IDPortenClientListerExpansion
}

// iDPortenClientLister implements the IDPortenClientLister interface.
type iDPortenClientLister struct {
	indexer cache.Indexer
}

// NewIDPortenClientLister returns a new IDPortenClientLister.
func NewIDPortenClientLister(indexer cache.Indexer) IDPortenClientLister {
	return &iDPortenClientLister{indexer: indexer}
}

// List lists all IDPortenClients in the indexer.
func (s *iDPortenClientLister) List(selector labels.Selector) (ret []*v1.IDPortenClient, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.IDPortenClient))
	})
	return ret, err
}

// IDPortenClients returns an object that can list and get IDPortenClients.
func (s *iDPortenClientLister) IDPortenClients(namespace string) IDPortenClientNamespaceLister {
	return iDPortenClientNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// IDPortenClientNamespaceLister helps list and get IDPortenClients.
type IDPortenClientNamespaceLister interface {
	// List lists all IDPortenClients in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.IDPortenClient, err error)
	// Get retrieves the IDPortenClient from the indexer for a given namespace and name.
	Get(name string) (*v1.IDPortenClient, error)
	IDPortenClientNamespaceListerExpansion
}

// iDPortenClientNamespaceLister implements the IDPortenClientNamespaceLister
// interface.
type iDPortenClientNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all IDPortenClients in the indexer for a given namespace.
func (s iDPortenClientNamespaceLister) List(selector labels.Selector) (ret []*v1.IDPortenClient, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.IDPortenClient))
	})
	return ret, err
}

// Get retrieves the IDPortenClient from the indexer for a given namespace and name.
func (s iDPortenClientNamespaceLister) Get(name string) (*v1.IDPortenClient, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("idportenclient"), name)
	}
	return obj.(*v1.IDPortenClient), nil
}
