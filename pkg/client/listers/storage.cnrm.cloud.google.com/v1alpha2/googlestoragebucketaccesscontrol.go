// Code generated by lister-gen. DO NOT EDIT.

package v1alpha2

import (
	v1alpha2 "github.com/nais/naiserator/pkg/apis/storage.cnrm.cloud.google.com/v1alpha2"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// GoogleStorageBucketAccessControlLister helps list GoogleStorageBucketAccessControls.
type GoogleStorageBucketAccessControlLister interface {
	// List lists all GoogleStorageBucketAccessControls in the indexer.
	List(selector labels.Selector) (ret []*v1alpha2.GoogleStorageBucketAccessControl, err error)
	// GoogleStorageBucketAccessControls returns an object that can list and get GoogleStorageBucketAccessControls.
	GoogleStorageBucketAccessControls(namespace string) GoogleStorageBucketAccessControlNamespaceLister
	GoogleStorageBucketAccessControlListerExpansion
}

// googleStorageBucketAccessControlLister implements the GoogleStorageBucketAccessControlLister interface.
type googleStorageBucketAccessControlLister struct {
	indexer cache.Indexer
}

// NewGoogleStorageBucketAccessControlLister returns a new GoogleStorageBucketAccessControlLister.
func NewGoogleStorageBucketAccessControlLister(indexer cache.Indexer) GoogleStorageBucketAccessControlLister {
	return &googleStorageBucketAccessControlLister{indexer: indexer}
}

// List lists all GoogleStorageBucketAccessControls in the indexer.
func (s *googleStorageBucketAccessControlLister) List(selector labels.Selector) (ret []*v1alpha2.GoogleStorageBucketAccessControl, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha2.GoogleStorageBucketAccessControl))
	})
	return ret, err
}

// GoogleStorageBucketAccessControls returns an object that can list and get GoogleStorageBucketAccessControls.
func (s *googleStorageBucketAccessControlLister) GoogleStorageBucketAccessControls(namespace string) GoogleStorageBucketAccessControlNamespaceLister {
	return googleStorageBucketAccessControlNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// GoogleStorageBucketAccessControlNamespaceLister helps list and get GoogleStorageBucketAccessControls.
type GoogleStorageBucketAccessControlNamespaceLister interface {
	// List lists all GoogleStorageBucketAccessControls in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha2.GoogleStorageBucketAccessControl, err error)
	// Get retrieves the GoogleStorageBucketAccessControl from the indexer for a given namespace and name.
	Get(name string) (*v1alpha2.GoogleStorageBucketAccessControl, error)
	GoogleStorageBucketAccessControlNamespaceListerExpansion
}

// googleStorageBucketAccessControlNamespaceLister implements the GoogleStorageBucketAccessControlNamespaceLister
// interface.
type googleStorageBucketAccessControlNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all GoogleStorageBucketAccessControls in the indexer for a given namespace.
func (s googleStorageBucketAccessControlNamespaceLister) List(selector labels.Selector) (ret []*v1alpha2.GoogleStorageBucketAccessControl, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha2.GoogleStorageBucketAccessControl))
	})
	return ret, err
}

// Get retrieves the GoogleStorageBucketAccessControl from the indexer for a given namespace and name.
func (s googleStorageBucketAccessControlNamespaceLister) Get(name string) (*v1alpha2.GoogleStorageBucketAccessControl, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha2.Resource("googlestoragebucketaccesscontrol"), name)
	}
	return obj.(*v1alpha2.GoogleStorageBucketAccessControl), nil
}
