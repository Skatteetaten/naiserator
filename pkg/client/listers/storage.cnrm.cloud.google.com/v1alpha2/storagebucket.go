// Code generated by lister-gen. DO NOT EDIT.

package v1alpha2

import (
	v1alpha2 "github.com/nais/naiserator/pkg/apis/storage.cnrm.cloud.google.com/v1alpha2"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// StorageBucketLister helps list StorageBuckets.
type StorageBucketLister interface {
	// List lists all StorageBuckets in the indexer.
	List(selector labels.Selector) (ret []*v1alpha2.StorageBucket, err error)
	// StorageBuckets returns an object that can list and get StorageBuckets.
	StorageBuckets(namespace string) StorageBucketNamespaceLister
	StorageBucketListerExpansion
}

// storageBucketLister implements the StorageBucketLister interface.
type storageBucketLister struct {
	indexer cache.Indexer
}

// NewStorageBucketLister returns a new StorageBucketLister.
func NewStorageBucketLister(indexer cache.Indexer) StorageBucketLister {
	return &storageBucketLister{indexer: indexer}
}

// List lists all StorageBuckets in the indexer.
func (s *storageBucketLister) List(selector labels.Selector) (ret []*v1alpha2.StorageBucket, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha2.StorageBucket))
	})
	return ret, err
}

// StorageBuckets returns an object that can list and get StorageBuckets.
func (s *storageBucketLister) StorageBuckets(namespace string) StorageBucketNamespaceLister {
	return storageBucketNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// StorageBucketNamespaceLister helps list and get StorageBuckets.
type StorageBucketNamespaceLister interface {
	// List lists all StorageBuckets in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha2.StorageBucket, err error)
	// Get retrieves the StorageBucket from the indexer for a given namespace and name.
	Get(name string) (*v1alpha2.StorageBucket, error)
	StorageBucketNamespaceListerExpansion
}

// storageBucketNamespaceLister implements the StorageBucketNamespaceLister
// interface.
type storageBucketNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all StorageBuckets in the indexer for a given namespace.
func (s storageBucketNamespaceLister) List(selector labels.Selector) (ret []*v1alpha2.StorageBucket, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha2.StorageBucket))
	})
	return ret, err
}

// Get retrieves the StorageBucket from the indexer for a given namespace and name.
func (s storageBucketNamespaceLister) Get(name string) (*v1alpha2.StorageBucket, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha2.Resource("storagebucket"), name)
	}
	return obj.(*v1alpha2.StorageBucket), nil
}
