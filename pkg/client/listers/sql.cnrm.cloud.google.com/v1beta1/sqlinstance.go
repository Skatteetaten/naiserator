// Code generated by lister-gen. DO NOT EDIT.

package v1beta1

import (
	v1beta1 "github.com/nais/naiserator/pkg/apis/sql.cnrm.cloud.google.com/v1beta1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// SQLInstanceLister helps list SQLInstances.
type SQLInstanceLister interface {
	// List lists all SQLInstances in the indexer.
	List(selector labels.Selector) (ret []*v1beta1.SQLInstance, err error)
	// SQLInstances returns an object that can list and get SQLInstances.
	SQLInstances(namespace string) SQLInstanceNamespaceLister
	SQLInstanceListerExpansion
}

// sQLInstanceLister implements the SQLInstanceLister interface.
type sQLInstanceLister struct {
	indexer cache.Indexer
}

// NewSQLInstanceLister returns a new SQLInstanceLister.
func NewSQLInstanceLister(indexer cache.Indexer) SQLInstanceLister {
	return &sQLInstanceLister{indexer: indexer}
}

// List lists all SQLInstances in the indexer.
func (s *sQLInstanceLister) List(selector labels.Selector) (ret []*v1beta1.SQLInstance, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1beta1.SQLInstance))
	})
	return ret, err
}

// SQLInstances returns an object that can list and get SQLInstances.
func (s *sQLInstanceLister) SQLInstances(namespace string) SQLInstanceNamespaceLister {
	return sQLInstanceNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// SQLInstanceNamespaceLister helps list and get SQLInstances.
type SQLInstanceNamespaceLister interface {
	// List lists all SQLInstances in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1beta1.SQLInstance, err error)
	// Get retrieves the SQLInstance from the indexer for a given namespace and name.
	Get(name string) (*v1beta1.SQLInstance, error)
	SQLInstanceNamespaceListerExpansion
}

// sQLInstanceNamespaceLister implements the SQLInstanceNamespaceLister
// interface.
type sQLInstanceNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all SQLInstances in the indexer for a given namespace.
func (s sQLInstanceNamespaceLister) List(selector labels.Selector) (ret []*v1beta1.SQLInstance, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1beta1.SQLInstance))
	})
	return ret, err
}

// Get retrieves the SQLInstance from the indexer for a given namespace and name.
func (s sQLInstanceNamespaceLister) Get(name string) (*v1beta1.SQLInstance, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1beta1.Resource("sqlinstance"), name)
	}
	return obj.(*v1beta1.SQLInstance), nil
}
