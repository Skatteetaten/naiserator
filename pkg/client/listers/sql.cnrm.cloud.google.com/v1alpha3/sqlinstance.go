// Code generated by lister-gen. DO NOT EDIT.

package v1alpha3

import (
	v1alpha3 "github.com/nais/naiserator/pkg/apis/sql.cnrm.cloud.google.com/v1alpha3"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// SqlInstanceLister helps list SqlInstances.
type SqlInstanceLister interface {
	// List lists all SqlInstances in the indexer.
	List(selector labels.Selector) (ret []*v1alpha3.SqlInstance, err error)
	// SqlInstances returns an object that can list and get SqlInstances.
	SqlInstances(namespace string) SqlInstanceNamespaceLister
	SqlInstanceListerExpansion
}

// sqlInstanceLister implements the SqlInstanceLister interface.
type sqlInstanceLister struct {
	indexer cache.Indexer
}

// NewSqlInstanceLister returns a new SqlInstanceLister.
func NewSqlInstanceLister(indexer cache.Indexer) SqlInstanceLister {
	return &sqlInstanceLister{indexer: indexer}
}

// List lists all SqlInstances in the indexer.
func (s *sqlInstanceLister) List(selector labels.Selector) (ret []*v1alpha3.SqlInstance, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha3.SqlInstance))
	})
	return ret, err
}

// SqlInstances returns an object that can list and get SqlInstances.
func (s *sqlInstanceLister) SqlInstances(namespace string) SqlInstanceNamespaceLister {
	return sqlInstanceNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// SqlInstanceNamespaceLister helps list and get SqlInstances.
type SqlInstanceNamespaceLister interface {
	// List lists all SqlInstances in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha3.SqlInstance, err error)
	// Get retrieves the SqlInstance from the indexer for a given namespace and name.
	Get(name string) (*v1alpha3.SqlInstance, error)
	SqlInstanceNamespaceListerExpansion
}

// sqlInstanceNamespaceLister implements the SqlInstanceNamespaceLister
// interface.
type sqlInstanceNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all SqlInstances in the indexer for a given namespace.
func (s sqlInstanceNamespaceLister) List(selector labels.Selector) (ret []*v1alpha3.SqlInstance, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha3.SqlInstance))
	})
	return ret, err
}

// Get retrieves the SqlInstance from the indexer for a given namespace and name.
func (s sqlInstanceNamespaceLister) Get(name string) (*v1alpha3.SqlInstance, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha3.Resource("sqlinstance"), name)
	}
	return obj.(*v1alpha3.SqlInstance), nil
}
