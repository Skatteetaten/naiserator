// Code generated by lister-gen. DO NOT EDIT.

package v1alpha3

import (
	v1alpha3 "github.com/nais/naiserator/pkg/apis/sql.cnrm.cloud.google.com/v1alpha3"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// SqlDatabaseLister helps list SqlDatabases.
type SqlDatabaseLister interface {
	// List lists all SqlDatabases in the indexer.
	List(selector labels.Selector) (ret []*v1alpha3.SqlDatabase, err error)
	// SqlDatabases returns an object that can list and get SqlDatabases.
	SqlDatabases(namespace string) SqlDatabaseNamespaceLister
	SqlDatabaseListerExpansion
}

// sqlDatabaseLister implements the SqlDatabaseLister interface.
type sqlDatabaseLister struct {
	indexer cache.Indexer
}

// NewSqlDatabaseLister returns a new SqlDatabaseLister.
func NewSqlDatabaseLister(indexer cache.Indexer) SqlDatabaseLister {
	return &sqlDatabaseLister{indexer: indexer}
}

// List lists all SqlDatabases in the indexer.
func (s *sqlDatabaseLister) List(selector labels.Selector) (ret []*v1alpha3.SqlDatabase, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha3.SqlDatabase))
	})
	return ret, err
}

// SqlDatabases returns an object that can list and get SqlDatabases.
func (s *sqlDatabaseLister) SqlDatabases(namespace string) SqlDatabaseNamespaceLister {
	return sqlDatabaseNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// SqlDatabaseNamespaceLister helps list and get SqlDatabases.
type SqlDatabaseNamespaceLister interface {
	// List lists all SqlDatabases in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha3.SqlDatabase, err error)
	// Get retrieves the SqlDatabase from the indexer for a given namespace and name.
	Get(name string) (*v1alpha3.SqlDatabase, error)
	SqlDatabaseNamespaceListerExpansion
}

// sqlDatabaseNamespaceLister implements the SqlDatabaseNamespaceLister
// interface.
type sqlDatabaseNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all SqlDatabases in the indexer for a given namespace.
func (s sqlDatabaseNamespaceLister) List(selector labels.Selector) (ret []*v1alpha3.SqlDatabase, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha3.SqlDatabase))
	})
	return ret, err
}

// Get retrieves the SqlDatabase from the indexer for a given namespace and name.
func (s sqlDatabaseNamespaceLister) Get(name string) (*v1alpha3.SqlDatabase, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha3.Resource("sqldatabase"), name)
	}
	return obj.(*v1alpha3.SqlDatabase), nil
}
