// Code generated by informer-gen. DO NOT EDIT.

package v1alpha3

import (
	internalinterfaces "github.com/nais/naiserator/pkg/client/informers/externalversions/internalinterfaces"
)

// Interface provides access to all the informers in this group version.
type Interface interface {
	// SqlDatabases returns a SqlDatabaseInformer.
	SqlDatabases() SqlDatabaseInformer
	// SqlInstances returns a SqlInstanceInformer.
	SqlInstances() SqlInstanceInformer
	// SqlUsers returns a SqlUserInformer.
	SqlUsers() SqlUserInformer
}

type version struct {
	factory          internalinterfaces.SharedInformerFactory
	namespace        string
	tweakListOptions internalinterfaces.TweakListOptionsFunc
}

// New returns a new Interface.
func New(f internalinterfaces.SharedInformerFactory, namespace string, tweakListOptions internalinterfaces.TweakListOptionsFunc) Interface {
	return &version{factory: f, namespace: namespace, tweakListOptions: tweakListOptions}
}

// SqlDatabases returns a SqlDatabaseInformer.
func (v *version) SqlDatabases() SqlDatabaseInformer {
	return &sqlDatabaseInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// SqlInstances returns a SqlInstanceInformer.
func (v *version) SqlInstances() SqlInstanceInformer {
	return &sqlInstanceInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// SqlUsers returns a SqlUserInformer.
func (v *version) SqlUsers() SqlUserInformer {
	return &sqlUserInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}
