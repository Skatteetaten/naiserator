// Code generated by informer-gen. DO NOT EDIT.

package v1alpha3

import (
	internalinterfaces "github.com/nais/naiserator/pkg/client/informers/externalversions/internalinterfaces"
)

// Interface provides access to all the informers in this group version.
type Interface interface {
	// SQLDatabases returns a SQLDatabaseInformer.
	SQLDatabases() SQLDatabaseInformer
	// SQLInstances returns a SQLInstanceInformer.
	SQLInstances() SQLInstanceInformer
	// SQLUsers returns a SQLUserInformer.
	SQLUsers() SQLUserInformer
}

type version struct {
	factory          internalinterfaces.SharedInformerFactory
	namespace        string
	tweakListOptions internalinterfaces.TweakListOptionsFunc
}

// New returns a new Interface.
func New(f internalinterfaces.SharedInformerFactory, namespace string, tweakListOptions internalinterfaces.TweakListOptionsFunc) Interface {
	return &version{factory: f, namespace: namespace, tweakListOptions: tweakListOptions}
}

// SQLDatabases returns a SQLDatabaseInformer.
func (v *version) SQLDatabases() SQLDatabaseInformer {
	return &sQLDatabaseInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// SQLInstances returns a SQLInstanceInformer.
func (v *version) SQLInstances() SQLInstanceInformer {
	return &sQLInstanceInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// SQLUsers returns a SQLUserInformer.
func (v *version) SQLUsers() SQLUserInformer {
	return &sQLUserInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}
