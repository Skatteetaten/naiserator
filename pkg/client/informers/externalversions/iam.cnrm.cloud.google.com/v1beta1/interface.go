// Code generated by informer-gen. DO NOT EDIT.

package v1beta1

import (
	internalinterfaces "github.com/nais/naiserator/pkg/client/informers/externalversions/internalinterfaces"
)

// Interface provides access to all the informers in this group version.
type Interface interface {
	// IAMPolicies returns a IAMPolicyInformer.
	IAMPolicies() IAMPolicyInformer
	// IAMPolicyMembers returns a IAMPolicyMemberInformer.
	IAMPolicyMembers() IAMPolicyMemberInformer
	// IAMServiceAccounts returns a IAMServiceAccountInformer.
	IAMServiceAccounts() IAMServiceAccountInformer
}

type version struct {
	factory          internalinterfaces.SharedInformerFactory
	namespace        string
	tweakListOptions internalinterfaces.TweakListOptionsFunc
}

// New returns a new Interface.
func New(f internalinterfaces.SharedInformerFactory, namespace string, tweakListOptions internalinterfaces.TweakListOptionsFunc) Interface {
	return &version{factory: f, namespace: namespace, tweakListOptions: tweakListOptions}
}

// IAMPolicies returns a IAMPolicyInformer.
func (v *version) IAMPolicies() IAMPolicyInformer {
	return &iAMPolicyInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// IAMPolicyMembers returns a IAMPolicyMemberInformer.
func (v *version) IAMPolicyMembers() IAMPolicyMemberInformer {
	return &iAMPolicyMemberInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// IAMServiceAccounts returns a IAMServiceAccountInformer.
func (v *version) IAMServiceAccounts() IAMServiceAccountInformer {
	return &iAMServiceAccountInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}
